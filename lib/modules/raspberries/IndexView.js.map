{"version":3,"sources":["modules/raspberries/IndexView.jsx"],"names":[],"mappings":";;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAY,kB;;AACZ;;;;;;;;AAEA,MAAM,SAAN,0BAAkC;;AAa9B,gBAAY,KAAZ,EAAmB;AACf,cAAM,KAAN;AACA,aAAK,YAAL,GAAoB;AAAA,mBAAa,MAAM,QAAN,CAAe,mBAAmB,YAAnB,CAAgC,YAAhC,CAAf,CAAb;AAAA,SAApB;AACA,aAAK,UAAL,GAAkB;AAAA,mBAAa,MAAM,QAAN,CAAe,mBAAmB,UAAnB,CAA8B,YAA9B,CAAf,CAAb;AAAA,SAAlB;AACA,aAAK,eAAL,GAAuB;AAAA,mBAAa,MAAM,QAAN,CAAe,mBAAmB,eAAnB,CAAmC,YAAnC,CAAf,CAAb;AAAA,SAAvB;AACH;;AAED,aAAS;AAAA,qBAC2D,KAAK,KADhE;AAAA,cACG,QADH,UACG,QADH;AAAA,cACa,kBADb,UACa,kBADb;AAAA,cACiC,qBADjC,UACiC,qBADjC;;AAEL,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAuB,sBAAvB,CAAd;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB;AACA,eAAQ;AAAA;YAAA,EAAoB,MAAK,aAAzB,EAAuC,UAAU,QAAjD;YACJ;AAAA;gBAAA;gBACI;AACI,iCAAa,qBADjB;AAEI,gCAAY,KAAK;AAFrB,kBADJ;gBAKI;AACI,iCAAa,kBADjB;AAEI,wCAAoB,sBAAsB,MAAtB,CAA6B;AAAA,+BAAK,CAAC,EAAE,MAAR;AAAA,qBAA7B,CAFxB;AAGI,qCAAiB,KAAK,eAH1B;AAII,gCAAY,KAAK;AAJrB,kBALJ;gBAWI;AACI,iCAAa,qBADjB;AAEI,kCAAc,KAAK,YAFvB;AAGI,gCAAY,KAAK;AAHrB;AAXJ;AADI,SAAR;AAmBH;AA3C6B;;AAA5B,S,CACK,S,GAAY;AACf,2BAAuB,iBAAU,KAAV,CAAgB,UADxB;AAEf,wBAAoB,iBAAU,KAAV,CAAgB,UAFrB;AAGf,cAAU,iBAAU,IAAV,CAAe;AAHV,C;AADjB,S,CAOK,Y,GAAe;AAClB,cAAU,iBAAU,IAAV,CAAe,UADP;AAElB,aAAS,iBAAU,MAAV,CAAiB;AAFR,C;kBAuCX,4BAAQ;AAAA,QAAG,WAAH,QAAG,WAAH;AAAA,WAAsB;AACzC,+BAAuB,YAAY,MAAZ,CAAmB;AAAA,mBAAK,EAAE,UAAP;AAAA,SAAnB,CADkB;AAEzC,4BAAoB,YAAY,MAAZ,CAAmB;AAAA,mBAAK,CAAC,EAAE,UAAR;AAAA,SAAnB;AAFqB,KAAtB;AAAA,CAAR,EAGX,SAHW,C","file":"modules/raspberries/IndexView.js","sourcesContent":["import { Component, PropTypes } from 'react';\nimport { connect } from 'alp-react-redux';\nimport Header from './components/HeaderComponent';\nimport RaspberryList from './components/RaspberryListComponent';\nimport UnknownRaspberryList from './components/UnknownRaspberryListComponent';\nimport * as raspberriesActions from './actions/raspberry';\nimport SubscribeContainer from 'react-alp-subscribe-container';\n\nclass IndexView extends Component {\n    static propTypes = {\n        registeredRaspberries: PropTypes.array.isRequired,\n        unknownRaspberries: PropTypes.array.isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n\n    constructor(props) {\n        super(props);\n        this.changeConfig = (...args) => props.dispatch(raspberriesActions.changeConfig(...args));\n        this.sendAction = (...args) => props.dispatch(raspberriesActions.sendAction(...args));\n        this.registerUnknown = (...args) => props.dispatch(raspberriesActions.registerUnknown(...args));\n    }\n\n    render() {\n        const { dispatch, unknownRaspberries, registeredRaspberries } = this.props;\n        const title = this.context.context.t('raspberry-pool.title');\n        this.context.setTitle(title);\n        return (<SubscribeContainer name=\"raspberries\" dispatch={dispatch}>\n            <div>\n                <Header\n                    raspberries={registeredRaspberries}\n                    sendAction={this.sendAction}\n                />\n                <UnknownRaspberryList\n                    raspberries={unknownRaspberries}\n                    offlineRaspberries={registeredRaspberries.filter(r => !r.online)}\n                    registerUnknown={this.registerUnknown}\n                    sendAction={this.sendAction}\n                />\n                <RaspberryList\n                    raspberries={registeredRaspberries}\n                    changeConfig={this.changeConfig}\n                    sendAction={this.sendAction}\n                />\n            </div>\n        </SubscribeContainer>);\n    }\n}\n\nexport default connect(({ raspberries }) => ({\n    registeredRaspberries: raspberries.filter(r => r.registered),\n    unknownRaspberries: raspberries.filter(r => !r.registered),\n}))(IndexView);\n"],"sourceRoot":"/"}