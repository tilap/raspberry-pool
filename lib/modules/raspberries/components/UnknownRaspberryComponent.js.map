{"version":3,"sources":["modules/raspberries/components/UnknownRaspberryComponent.jsx"],"names":[],"mappings":"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","file":"modules/raspberries/components/UnknownRaspberryComponent.js","sourcesContent":["import { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from '../../common/components/SpinnerComponent';\nimport T from 'react-alp-translate';\n\nexport default class UnknownRaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        offlineRaspberries: PropTypes.array.isRequired,\n        registerUnknown: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, registerUnknown, offlineRaspberries } = this.props;\n\n        return (<div className=\"raspberry unknown\">\n            <h2 className=\"text-title\">{raspberry.online}</h2>\n            <Spinner active={raspberry.saving} />\n            <span className={'status label'}>{raspberry.ip}</span>\n\n\n            <div className=\"row row-responsive spaced\">\n                <div className=\"col wp-50\">\n                    <div className=\"text-paragraph-title\"><T key=\"unknownRaspberry.title\" /></div>\n                    <div className=\"input text\">\n                        <input\n                            type=\"text\"\n                            required\n                            autoComplete=\"off\"\n                            className={`${this.state.name === undefined ? '' : `has-value${this.state.name ? '' : ' has-empty-value'}`}`}\n                            value={this.state.name}\n                            onChange={(e) => this.setState({ name: e.target.value })}\n                        />\n                        <label htmlFor={`raspberry-url-${raspberry.id}`}>Name</label>\n                    </div>\n                </div>\n                {!offlineRaspberries.length ? '' :\n                    <div className=\"col wp-50\">\n                        <div className=\"text-paragraph-title\"><T key=\"unknownRaspberry.addToExisting\" /></div>\n                        <div className=\"input radio\">\n                            <input\n                                id={`add-raspberry-${raspberry.id}`}\n                                name=\"addOrReplace\"\n                                type=\"radio\"\n                                defaultChecked\n                                value=\"add\"\n                                onChange={(e) => this.setState({ addOrReplace: e.target.value })}\n                            />\n                            <label htmlFor={`add-raspberry-${raspberry.id}`}><T key=\"unknownRaspberry.add\" /></label>\n                        </div>\n                        <div className=\"input radio\">\n                            <input\n                                id={`replace-raspberry-${raspberry.id}`}\n                                name=\"addOrReplace\"\n                                type=\"radio\"\n                                value=\"replace\"\n                                onChange={(e) => this.setState({ addOrReplace: e.target.value })}\n                            />\n                            <label htmlFor={`replace-raspberry-${raspberry.id}`}><T key=\"unknownRaspberry.replace\" /></label>\n                        </div>\n                        <select name=\"raspberry\" onChange={(e) => this.setState({ id: e.target.value })}>\n                            {!this.state.id && <option key=\"__empty\"></option>}\n                            {offlineRaspberries.map(r => <option key={r.id} value={r.id}>{r.data.name}</option>)}\n                        </select>\n                    </div>\n                }\n            </div>\n\n            <div className=\"button-container center\">\n                <button\n                    type=\"button\"\n                    disabled={!(this.state.name || this.state.id) || !!raspberry.saving}\n                    onClick={() => {\n                        registerUnknown(raspberry, {\n                            name: this.state.name,\n                            id: this.state.id,\n                            addOrReplace: this.state.addOrReplace || (this.state.id && 'add'),\n                        });\n                    }}\n                >\n                    Add\n                </button>\n            </div>\n        </div>);\n        /*\n                <button type=\"button\" onClick={() => {\n                    sendAction(raspberry, 'blink');\n                    this.setState({ urlChanged: false });\n                }}>Blink</button>\n        */\n    }\n}\n"],"sourceRoot":"/"}