{"version":3,"sources":["modules/raspberries/components/RaspberryComponent.jsx"],"names":[],"mappings":"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","file":"modules/raspberries/components/RaspberryComponent.js","sourcesContent":["import { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from '../../common/components/SpinnerComponent';\nimport Actions from './raspberry/ActionsComponent';\nimport T from 'react-alp-translate';\n\nexport default class RaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        changeConfig: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, changeConfig, sendAction } = this.props;\n\n        let url;\n        let display;\n        if (this.state.url != null) {\n            url = this.state.url;\n        } else if (raspberry.saving) {\n            url = this.state.lastUrl;\n        } else {\n            url = raspberry.data.config.url;\n        }\n\n        if (this.state.display != null) {\n            display = this.state.display;\n        } else if (raspberry.saving) {\n            display = this.state.lastDisplay;\n        } else {\n            display = raspberry.data.config.display;\n        }\n\n        return (<div className=\"raspberry\">\n            <div className=\"img-container\">\n                <img alt=\"screenshot\" src={`/screenshot.jpg?id=${raspberry.id}&date=${Date.now()}`} />\n            </div>\n            <div className=\"header-container\">\n                <h2 className=\"text-title\">\n                    <span className={`screen-status ${raspberry.online ? raspberry.screenState : 'offline'}`} title={raspberry.screenState === 'on' ? 'On' : 'Off'}>\n                        <span className=\"icon\" />\n                        <span className=\"status\" />\n                    </span>\n                    {raspberry.data.name}\n                </h2>\n            </div>\n            <Spinner active={raspberry.saving} />\n\n            <div className=\"status-container\">\n                <span className={`raspberry-status label ${raspberry.online ? 'success' : 'warning'}`}>\n                    {raspberry.online ? `${raspberry.ip}` : <T id=\"raspberry.offline\" />}\n                </span>\n            </div>\n\n            <Actions raspberries={[raspberry]} sendAction={sendAction} />\n\n            <fieldset>\n                <legend><T id=\"raspberry.config\" /></legend>\n                <div className=\"row row-responsive spaced\">\n                    <div className=\"col\" style={{ width: '100px', 'flex-basis': '100px', 'flex-grow': 0 }}>\n                        <div className=\"input select\">\n                            <select\n                                value={display || 'kweb3'}\n                                id={`raspberry-select-${raspberry.id}`}\n                                className={'has-value'}\n                                onChange={(e) => this.setState({\n                                    display: raspberry.data.config.display === e.target.value ? null : e.target.value,\n                                })}\n                            >\n                                <option value=\"kweb3\">kweb3</option>\n                                <option value=\"chromium\">chromium</option>\n                                <option value=\"livestreamer\">livestreamer</option>\n                            </select>\n                            <label htmlFor={`raspberry-select-${raspberry.id}`}><T id=\"raspberry.display\" /></label>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"input text\">\n                            <input\n                                id={`raspberry-url-${raspberry.id}`}\n                                type=\"url\" required\n                                className={`has-value${url ? '' : ' has-empty-value'}`}\n                                value={url}\n                                autoComplete=\"off\"\n                                onChange={(e) => this.setState({\n                                    url: raspberry.data.config.url === e.target.value ? null : e.target.value,\n                                })}\n                            />\n                            <label htmlFor={`raspberry-url-${raspberry.id}`}><T id=\"raspberry.url\" /></label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"button-container center\">\n                    <button\n                        type=\"button\"\n                        disabled={raspberry.saving || (this.state.url == null && this.state.display == null)}\n                        onClick={() => {\n                            const display = this.state.display || raspberry.data.config.display;\n                            const url = this.state.url || raspberry.data.config.url;\n                            this.setState({ url: null, lastUrl: url, display: null, lastDisplay: display });\n                            changeConfig(raspberry, { display, url });\n                        }}\n                    >\n                        <T id=\"raspberry.save\" />\n                    </button>\n                </div>\n            </fieldset>\n        </div>);\n    }\n}\n"],"sourceRoot":"/"}