{"version":3,"sources":["modules/raspberries/websocket/raspberries.server.js"],"names":[],"mappings":"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","file":"modules/raspberries/websocket/raspberries.server.js","sourcesContent":["import * as raspberriesManager from '../raspberriesManager.server';\nimport Logger from 'nightingale';\nimport { update, updateConfig } from '../actions/raspberry';\nimport { emitAction } from 'alp-react-redux';\n\nconst logger = new Logger('app.websocket.raspberries');\n\nlet clientsCount = 0;\nlet clientNs;\n\nexport default function init(io) {\n    clientNs = io.of('client', socket => onConnection(socket));\n}\n\nexport function broadcastAction(action: Object) {\n    logger.info('broadcast', action);\n    emitAction(clientNs.to('raspberries'), action);\n}\n\nfunction onConnection(socket) {\n    if (clientsCount++ === 0) {\n        raspberriesManager.raspberriesClientsConnected();\n    }\n    logger.info('connected', { clientsCount });\n\n    socket.on('disconnect', () => {\n        if (--clientsCount === 0) {\n            raspberriesManager.raspberriesClientsDisonnected();\n        }\n        logger.info('disconnected', { clientsCount });\n    });\n\n    socket.on('subscribe:raspberries', (callback) => {\n        logger.info('join');\n        socket.join('raspberries');\n        callback({ raspberries: raspberriesManager.getAll() });\n    });\n\n    socket.on('unsubscribe:raspberries', () => {\n        logger.info('leave');\n        socket.leave('raspberries');\n    });\n\n    socket.on('raspberry:changeConfig', (id, config, callback) => {\n        const newConfig = raspberriesManager.changeConfig(id, config, callback);\n        if (!newConfig) {\n            callback();\n        } else {\n            callback(newConfig);\n            const raspberry = raspberriesManager.getById(id);\n            emitAction(socket.broadcast.to('raspberries'), updateConfig(raspberry, newConfig));\n        }\n    });\n\n    socket.on('raspberry:sendAction', (ids, action, callback) => {\n        logger.info('sendAction raspberry', { ids, action });\n        ids.forEach(id => {\n            const raspberry = raspberriesManager.sendAction(id, action);\n            if (raspberry) {\n                emitAction(socket.broadcast.to('raspberries'), update(raspberry));\n            }\n        });\n        callback();\n    });\n\n    socket.on('raspberry:registerUnknown', (mac, info, callback) => {\n        logger.info('register raspberry', { mac, info });\n        const newRaspberry = raspberriesManager.add(mac, info);\n        if (!newRaspberry) {\n            callback(false);\n        } else {\n            callback(newRaspberry);\n            emitAction(socket.broadcast.to('raspberries'), update(newRaspberry));\n        }\n    });\n}\n"],"sourceRoot":"/"}